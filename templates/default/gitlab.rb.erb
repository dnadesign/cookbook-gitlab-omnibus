## Url on which GitLab will be reachable.
## For more details on configuring external_url see:
## https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#configuring-the-external-url-for-gitlab
external_url '<%= @external_url %>'


## Note: configuration settings below are optional.
## Uncomment and change the value.
############################
# gitlab.yml configuration #
############################

<% @gitlab_rails.each do |config_key, option | %>
<%= "gitlab_rails['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>

# gitlab_rails['gitlab_ssh_host'] = 'ssh.host_example.com'
# gitlab_rails['time_zone'] = 'UTC'
# gitlab_rails['gitlab_email_from'] = 'example@example.com'
# gitlab_rails['gitlab_default_projects_limit'] = 10
# gitlab_rails['gitlab_default_can_create_group'] = true
# gitlab_rails['gitlab_username_changing_enabled'] = true
# gitlab_rails['gitlab_default_theme'] = 2
# gitlab_rails['gitlab_signup_enabled'] = false
# gitlab_rails['gitlab_signin_enabled'] = true
# gitlab_rails['gitlab_restricted_visibility_levels'] = nil # to restrict public and internal: ['public', 'internal']
# gitlab_rails['gitlab_default_projects_features_issues'] = true
# gitlab_rails['gitlab_default_projects_features_merge_requests'] = true
# gitlab_rails['gitlab_default_projects_features_wiki'] = true
# gitlab_rails['gitlab_default_projects_features_snippets'] = false
# gitlab_rails['gitlab_default_projects_features_visibility_level'] = 'private'
# gitlab_rails['gitlab_repository_downloads_path'] = 'tmp/repositories'
# gitlab_rails['issues_tracker_redmine'] = false
# gitlab_rails['issues_tracker_redmine_title'] = "Redmine"
# gitlab_rails['issues_tracker_redmine_project_url'] = "http://redmine.sample/projects/:issues_tracker_id"
# gitlab_rails['issues_tracker_redmine_issues_url'] = "http://redmine.sample/issues/:id"
# gitlab_rails['issues_tracker_redmine_new_issue_url'] = "http://redmine.sample/projects/:issues_tracker_id/issues/new"
# gitlab_rails['issues_tracker_jira'] = false
# gitlab_rails['issues_tracker_jira_title'] = "Atlassian Jira"
# gitlab_rails['issues_tracker_jira_project_url'] = "http://jira.sample/issues/?jql=project=:issues_tracker_id"
# gitlab_rails['issues_tracker_jira_issues_url'] = "http://jira.sample/browse/:id"
# gitlab_rails['issues_tracker_jira_new_issue_url'] = "http://jira.sample/secure/CreateIssue.jspa"
# gitlab_rails['gravatar_enabled'] = true
# gitlab_rails['gravatar_plain_url'] = 'http://www.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon'
# gitlab_rails['gravatar_ssl_url'] = 'https://secure.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon'
# gitlab_rails['webhook_timeout'] = 10

## For setting up LDAP
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#setting-up-ldap-sign-in

## For setting up omniauth
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#omniauth-google-twitter-github-login

## For setting up backups
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#backups

# gitlab_rails['backup_path'] = "/var/opt/gitlab/backups"
# gitlab_rails['backup_keep_time'] = 604800
# gitlab_rails['backup_upload_connection'] = {
#   'provider' => 'AWS',
#   'region' => 'eu-west-1',
#   'aws_access_key_id' => 'AKIAKIAKI',
#   'aws_secret_access_key' => 'secret123'
# }
# gitlab_rails['backup_upload_remote_directory'] = 'my.s3.bucket'

## For setting up different data storing directory
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#storing-git-data-in-an-alternative-directory


###############################
# GitLab application settings #
###############################

############################
# GitLab database settings #
############################
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/database.md#database-settings
## Only needed if you use an external database.

# gitlab_rails['db_adapter'] = "postgresql"
# gitlab_rails['db_encoding'] = "unicode"
# gitlab_rails['db_database'] = "gitlabhq_production"
# gitlab_rails['db_pool'] = 10
# gitlab_rails['db_username'] = "gitlab"
# gitlab_rails['db_password'] = nil
# gitlab_rails['db_host'] = nil
# gitlab_rails['db_port'] = 5432
# gitlab_rails['db_socket'] = nil


#########################
# GitLab redis settings #
#########################
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/redis.md#redis-settings

################################
# GitLab email server settings #
################################
# see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/smtp.md#smtp-settings

###############
# GitLab user #
###############
## see https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#changing-the-name-of-the-git-user-group
## Modify default git user.

<% @user.each do |config_key, option| %>
<%= "user['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>
# user['username'] = "git"
# user['group'] = "git"
# user['uid'] = nil
# user['gid'] = nil
# # The shell for the git user
# user['shell'] = "/bin/sh"
# # The home directory for the git user
# user['home'] = "/var/opt/gitlab"
# user['git_user_name'] = "GitLab"
# user['git_user_email'] = "gitlab@#{node['fqdn']}"

##################
# GitLab Unicorn #
##################
## Tweak unicorn settings.

<% @unicorn.each do |config_key, option| %>
<%= "unicorn['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>

##################
# GitLab Sidekiq #
##################

<% @sidekiq.each do |config_key, option| %>
<%= "sidekiq['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>

################
# gitlab-shell #
################

<% @gitlab_shell.each do |config_key, option| %>
<%= "gitlab_shell['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>

#####################
# GitLab PostgreSQL #
#####################

<% @postgresql.each do |config_key, option| %>
<%= "postgresql['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>
# postgresql['enable'] = true
# postgresql['listen_address'] = nil
# postgresql['port'] = 5432
# postgresql['data_dir'] = "/var/opt/gitlab/postgresql/data"
# postgresql['shared_buffers'] = "256MB" # recommend value is 1/4 of total RAM, up to 14GB.

## Advanced settings
# postgresql['ha'] = false
# postgresql['dir'] = "/var/opt/gitlab/postgresql"
# postgresql['log_directory'] = "/var/log/gitlab/postgresql"
# postgresql['username'] = "gitlab-psql"
# postgresql['uid'] = nil
# postgresql['gid'] = nil
# postgresql['shell'] = "/bin/sh"
# postgresql['home'] = "/var/opt/gitlab/postgresql"
# postgresql['user_path'] = "/opt/gitlab/embedded/bin:/opt/gitlab/bin:$PATH"
# postgresql['sql_user'] = "gitlab"
# postgresql['sql_ci_user'] = "gitlab_ci"
# postgresql['max_connections'] = 200
# postgresql['md5_auth_cidr_addresses'] = []
# postgresql['trust_auth_cidr_addresses'] = []
# postgresql['shmmax'] =  17179869184 # or 4294967295
# postgresql['shmall'] =  4194304 # or 1048575
# postgresql['work_mem'] = "8MB"
# postgresql['effective_cache_size'] = "1MB"
# postgresql['checkpoint_segments'] = 10
# postgresql['checkpoint_timeout'] = "5min"
# postgresql['checkpoint_completion_target'] = 0.9
# postgresql['checkpoint_warning'] = "30s"


################
# GitLab Redis #
################
## Can be disabled if you are using your own redis instance.

<% @redis.each do |config_key, option| %>
<%= "redis['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>

#####################
# GitLab Web server #
#####################
## see: https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/nginx.md#using-a-non-bundled-web-server
## When bundled nginx is disabled we need to add the external webserver user to the GitLab webserver group.

<% @web_server.each do |config_key, option| %>
<%= "web_server['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>
# web_server['external_users'] = []
# web_server['username'] = 'gitlab-www'
# web_server['group'] = 'gitlab-www'
# web_server['uid'] = nil
# web_server['gid'] = nil


################
# GitLab Nginx #
################
## see: https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/nginx.md

<% @nginx.each do |config_key, option| %>
<%= "nginx['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>

##################
# GitLab Logging #
##################
## see: https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#logs

<% @logging.each do |config_key, option| %>
<%= "logging['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>

#############
# Logrotate #
#############
## see: https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#logrotate
## You can disable built in logrotate feature.

<% @logrotate.each do |config_key, option| %>
<%= "logrotate['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>
# logrotate['enable'] = true

#######
# Git #
#######
## Advanced setting for configuring git system settings for omnibus-gitlab internal git
## For multiple options under one header use array of comma separated values, eg.
## { "receive" => ["fsckObjects = true"], "alias" => ["st = status", "co = checkout"] }

# omnibus_gitconfig['system'] = { "receive" => ["fsckObjects = true"] }

############################################
# Url on which GitLab CI will be reachable #
############################################
## see https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/gitlab-ci/README.md

# ci_external_url 'http://ci.example.com'
<%= "ci_external_url '#{@ci_external_url}'" if @ci_external_url %>

#################################
# application.yml configuration #
#################################

<% @gitlab_ci.each do |config_key, option| %>
<%= "gitlab_ci['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>
# gitlab_ci['gitlab_server'] = { "url" => 'http://gitlab.example.com', "app_id" => '12345678', "app_secret" => 'QWERTY12345' }

# gitlab_ci['gitlab_ci_email_from'] = 'gitlab-ci@example.com'
# gitlab_ci['gitlab_ci_support_email'] = 'gitlab-ci@example.com'
# gitlab_ci['gitlab_ci_all_broken_builds'] = true
# gitlab_ci['gitlab_ci_add_committer'] = true

# gitlab_ci['gravatar_enabled'] = true
# gitlab_ci['gravatar_plain_url'] = "http://www.gravatar.com/avatar/%{hash}?s=%{size}&d=mm"
# gitlab_ci['gravatar_ssl_url'] =  "https://secure.gravatar.com/avatar/%{hash}?s=%{size}&d=mm"

###############################
# GitLab CI database settings #
###############################
## see https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/database.md#database-settings
## Only needed if you use an external database.

# gitlab_ci['db_adapter'] = "postgresql"
# gitlab_ci['db_encoding'] = "unicode"
# gitlab_ci['db_database'] = "gitlab_ci_production"
# gitlab_ci['db_pool'] = 10
# gitlab_ci['db_username'] = "gitlab_ci"
# gitlab_ci['db_password'] = nil
# gitlab_ci['db_host'] = nil
# gitlab_ci['db_port'] = 5432
# gitlab_ci['db_socket'] = nil

############################
# GitLab CI redis settings #
############################
## see https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/redis.md#redis-settings
## Connect to your own redis instance.

# gitlab_ci['redis_host'] = "127.0.0.1"
# gitlab_ci['redis_port'] = nil
# gitlab_ci['redis_socket'] = "/var/opt/gitlab/ci-redis/redis.socket"

###################################
# GitLab CI email server settings #
###################################
## see https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/smtp.md#smtp-settings

# gitlab_ci['smtp_enable'] = true
# gitlab_ci['smtp_address'] = "smtp.server"
# gitlab_ci['smtp_port'] = 456
# gitlab_ci['smtp_user_name'] = "smtp user"
# gitlab_ci['smtp_password'] = "smtp password"
# gitlab_ci['smtp_domain'] = "example.com"
# gitlab_ci['smtp_authentication'] = "login"
# gitlab_ci['smtp_enable_starttls_auto'] = true
# gitlab_ci['smtp_tls'] = false
# gitlab_ci['smtp_openssl_verify_mode'] = false


#############
# GitLab CI #
#############

# gitlab_ci['schedule_builds_minute'] = "0"
# gitlab_ci['env'] = {
#   'BUNDLE_GEMFILE' => "/opt/gitlab/embedded/service/gitlab-ci/Gemfile",
#   'PATH' => "/opt/gitlab/bin:/opt/gitlab/embedded/bin:/bin:/usr/bin"
# }

# gitlab_ci['username'] = "gitlab-ci"
# gitlab_ci['uid'] = nil
# gitlab_ci['gid'] = nil


#####################
# GitLab CI Unicorn #
#####################
## Tweak unicorn settings.

<% @ci_unicorn.each do |config_key, option| %>
<%= "ci_unicorn['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>
# ci_unicorn['worker_processes'] = 2
# ci_unicorn['worker_timeout'] = 60
## Advanced settings
# ci_unicorn['listen'] = '127.0.0.1'
# ci_unicorn['port'] = 8181
# ci_unicorn['socket'] = '/var/opt/gitlab/gitlab-ci/sockets/gitlab.socket'
# ci_unicorn['pidfile'] = '/opt/gitlab/var/ci-unicorn/unicorn.pid'
# ci_unicorn['tcp_nopush'] = true
# ci_unicorn['backlog_socket'] = 1024


###################
# GitLab CI Redis #
###################
## see https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/redis.md
## You can turn off bundled redis if you want to use your own redis instanance

<% @ci_redis.each do |config_key, option| %>
<%= "ci_redis['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>
# ci_redis['enable'] = true


###################
# GitLab CI NGINX #
###################
## see https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/nginx.md
## You can tell the bundled NGINX that it should not serve up GitLab CI by setting ci_nginx['enable'] to false.

<% @ci_nginx.each do |config_key, option| %>
<%= "ci_nginx['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>
# ci_nginx['enable'] = false

#####################
# GitLab Mattermost #
#####################

mattermost_external_url '<%= @mattermost_external_url %>'
# mattermost_external_url 'http://mattermost.example.com'


<% @mattermost.each do |config_key, option| %>
<%= "mattermost['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>

# mattermost['enable'] = false
# mattermost['username'] = 'mattermost'
# mattermost['group'] = 'mattermost'
# mattermost['home'] = '/var/opt/gitlab/mattermost'
# mattermost['database_name'] = 'mattermost_production'

# mattermost['log_file_directory'] = '/var/log/gitlab/mattermost'
# mattermost['log_console_enable'] = true
# mattermost['log_console_level'] = 'INFO'
# mattermost['log_file_enable'] = false
# mattermost['log_file_level'] = 'INFO'
# mattermost['log_file_format'] = nil

# mattermost['service_site_name'] = "GitLab Mattermost"
# mattermost['service_mode'] = 'beta'
# mattermost['service_allow_testing'] = false
# mattermost['service_use_ssl'] = false
# mattermost['service_port'] = "8065"
# mattermost['service_version'] = "developer"
# mattermost['service_analytics_url'] = nil
# mattermost['service_use_local_storage'] = true
# mattermost['service_storage_directory'] = "/var/opt/gitlab/mattermost/data"
# mattermost['service_allowed_login_attempts'] = 10
# mattermost['service_allow_email_sign_up'] = false

# mattermost['sql_data_source'] = nil
# mattermost['sql_data_source_replicas'] = []
# mattermost['sql_max_idle_conns'] = 10
# mattermost['sql_max_open_conns'] = 10
# mattermost['sql_trace'] = false

# mattermost['oauth'] = {'gitlab' => {'Allow' => true, 'Secret' => "123", 'Id' => "123", "AuthEndpoint" => "aa", "TokenEndpoint" => "bb", "UserApiEndpoint" => "cc", "Scope" => "" }}
# mattermost['aws'] = {'S3AccessKeyId' => '123', 'S3SecretAccessKey' => '123', 'S3Bucket' => 'aa', 'S3Region' => 'bb'}
# mattermost['image_thumbnail_width'] = 120
# mattermost['image_thumbnail_height'] = 100
# mattermost['image_preview_width'] = 1024
# mattermost['image_preview_height'] = 0
# mattermost['image_profile_width'] = 128
# mattermost['image_profile_height'] = 128
# mattermost['image_initial_font'] = 'luximbi.ttf'

# mattermost['email_by_pass_email'] = true
# mattermost['email_smtp_username'] = nil
# mattermost['email_smtp_password'] = nil
# mattermost['email_smtp_server'] = nil
# mattermost['email_use_tls'] = false
# mattermost['email_feedback_email'] = nil
# mattermost['email_feedback_name'] = nil
# mattermost['email_apple_push_server'] = nil
# mattermost['email_apple_push_cert_public'] = nil
# mattermost['email_apple_push_cert_private'] = nil

# mattermost['ratelimit_use_rate_limiter'] = true
# mattermost['ratelimit_per_sec'] = 10
# mattermost['ratelimit_memory_store_size'] = 10000
# mattermost['ratelimit_vary_by_remote_addr'] = true
# mattermost['ratelimit_vary_by_header'] = nil

# mattermost['privacy_show_email_address'] = true
# mattermost['privacy_show_phone_number'] = true
# mattermost['privacy_show_skype_id'] = true
# mattermost['privacy_show_full_name'] = true

# mattermost['team_max_users_per_team'] = 150
# mattermost['team_allow_public_link'] = true
# mattermost['team_allow_valet_default'] = false
# mattermost['team_terms_link'] = '/static/help/configure_links.html'
# mattermost['team_privacy_link'] = '/static/help/configure_links.html'
# mattermost['team_about_link'] = '/static/help/configure_links.html'
# mattermost['team_help_link'] = '/static/help/configure_links.html'
# mattermost['team_report_problem_link'] = '/static/help/configure_links.html'
# mattermost['team_tour_link'] = '/static/help/configure_links.html'
# mattermost['team_default_color'] = '#2389D7'
# mattermost['team_disable_team_creation'] = true
# mattermost['team_restrict_creation_to_domains'] = "gmail.com"

####################
# Mattermost NGINX #
####################


<% @mattermost_nginx.each do |config_key, option| %>
<%= "mattermost_nginx['#{config_key}'] = #{print_config_option(option)}" %>
<% end %>

# mattermost_nginx['enable'] = false
# mattermost_nginx['client_max_body_size'] = '250m'
# mattermost_nginx['redirect_http_to_https'] = false
# mattermost_nginx['redirect_http_to_https_port'] = 80
# mattermost_nginx['ssl_certificate'] = "/etc/gitlab/ssl/#{node['fqdn']}.crt"
# mattermost_nginx['ssl_certificate_key'] = "/etc/gitlab/ssl/#{node['fqdn']}.key"
# mattermost_nginx['ssl_ciphers'] = "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256"
# mattermost_nginx['ssl_prefer_server_ciphers'] = "on"
# mattermost_nginx['ssl_protocols'] = "TLSv1 TLSv1.1 TLSv1.2" # recommended by https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html & https://cipherli.st/
# mattermost_nginx['ssl_session_cache'] = "builtin:1000  shared:SSL:10m" # recommended in http://nginx.org/en/docs/http/ngx_http_ssl_module.html
# mattermost_nginx['ssl_session_timeout'] = "5m" # default according to http://nginx.org/en/docs/http/ngx_http_ssl_module.html
# mattermost_nginx['ssl_dhparam'] = nil # Path to ci_dhparams.pem, eg. /etc/gitlab/ssl/ci_dhparams.pem
# mattermost_nginx['listen_addresses'] = ['*']
# mattermost_nginx['listen_port'] = nil # override only if you use a reverse proxy: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md#setting-the-nginx-listen-port
# mattermost_nginx['listen_https'] = nil # override only if your reverse proxy internally communicates over HTTP: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md#supporting-proxied-ssl
# mattermost_nginx['custom_gitlab_mattermost_server_config'] = "location ^~ /foo-namespace/bar-project/raw/ {\n deny all;\n}\n"
# mattermost_nginx['custom_nginx_config'] = "include /etc/nginx/conf.d/example.conf;"

## Advanced settings
# mattermost_nginx['dir'] = "/var/opt/gitlab/nginx"
# mattermost_nginx['log_directory'] = "/var/log/gitlab/nginx"
# mattermost_nginx['worker_processes'] = 4
# mattermost_nginx['worker_connections'] = 10240
# mattermost_nginx['sendfile'] = 'on'
# mattermost_nginx['tcp_nopush'] = 'on'
# mattermost_nginx['tcp_nodelay'] = 'on'
# mattermost_nginx['gzip'] = "on"
# mattermost_nginx['gzip_http_version'] = "1.0"
# mattermost_nginx['gzip_comp_level'] = "2"
# mattermost_nginx['gzip_proxied'] = "any"
# mattermost_nginx['gzip_types'] = [ "text/plain", "text/css", "application/x-javascript", "text/xml", "application/xml", "application/xml+rss", "text/javascript", "application/json" ]
# mattermost_nginx['keepalive_timeout'] = 65
# mattermost_nginx['cache_max_size'] = '5000m'
